global
    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    maxconn     6500
    user        haproxy
    group       haproxy
    daemon
    stats socket /var/lib/haproxy/stats
 
defaults
    log                     global
    option                  httplog
    option                  dontlognull
    option http-server-close
    option                  redispatch
    retries                 3
    timeout http-request    10s
    timeout queue           1m
    timeout connect         10s
    timeout client          1m
    timeout server          1m
    timeout http-keep-alive 10s
    timeout check           10s
    maxconn                 5000
    timeout tunnel          3600s
frontend k8s-api
    bind *:6443
    mode tcp
    option tcplog
    default_backend k8s-api
    log 127.0.0.1 local2
backend k8s-api
    mode tcp
    option tcp-check
    balance roundrobin
    default-server inter 10s downinter 5s rise 2 fall 2 slowstart 60s maxconn 1000 maxqueue 256 weight 100
$k8s_api_list
    log 127.0.0.1 local2
 
frontend k8s-ingress-https
    bind *:443
    mode tcp
    option tcplog
    default_backend k8s-ingress-https
    log 127.0.0.1 local3
    maxconn 6500
 
backend k8s-ingress-https
    mode tcp
    option tcp-check
    balance roundrobin
    default-server inter 5s downinter 15s rise 2 fall 2 slowstart 20s maxconn 25000 maxqueue 256 weight 100
$k8s_ingress_https
    log 127.0.0.1 local3
    fullconn 6500
 
frontend k8s-ingress-http
    bind *:80
    mode tcp
    option tcplog
    default_backend k8s-ingress-http
    log 127.0.0.1 local3
    maxconn 6500
 
backend k8s-ingress-http
    mode tcp
    option tcp-check
    balance roundrobin
    default-server inter 5s downinter 15s rise 2 fall 2 slowstart 20s maxconn 25000 maxqueue 256 weight 100
$k8s_ingress_http
    log 127.0.0.1 local3
    fullconn 6500
 
frontend stats
    bind *:8404
    mode http
    stats enable
    stats uri /stats
    stats refresh 10s
    stats admin if { src 10.30.30.0/23 }
    http-request set-log-level silent
    http-request use-service prometheus-exporter if { path /metrics }
