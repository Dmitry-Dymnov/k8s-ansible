---
- name: "Check if haproxy package is installed"
  command: rpm -q haproxy
  register: package_check
  changed_when: false
  ignore_errors: true

- name: "remove immutable /etc/sysctl.conf"
  file:
    path: /etc/sysctl.conf
    attr: -i
  when: package_check is failed

- name: "remove immutable /etc/sysctl.d"
  file:
    path: /etc/sysctl.d
    attr: -i
  when: package_check is failed

- name: set sysctl.conf
  block:
    - sysctl:
        name: "{{ item.name }}"
        value: "{{ item.value }}"
        state: present
        sysctl_set: yes
        reload: yes
      ignore_errors: yes
      with_items:
        - { name: "net.core.netdev_max_backlog", value: "20000" }
        - { name: "net.ipv4.tcp_max_syn_backlog", value: "20000" }
        - { name: "net.ipv4.tcp_synack_retries", value: "3" }
        - { name: "net.ipv4.tcp_retries2", value: "6" }
        - { name: "net.ipv4.tcp_keepalive_time", value: "1000" }
        - { name: "net.ipv4.tcp_keepalive_probes", value: "4" }
        - { name: "net.ipv4.tcp_keepalive_intvl", value: "20" }
        - { name: "net.ipv4.tcp_tw_reuse", value: "1" }
        - { name: "net.ipv4.tcp_fin_timeout", value: "2" }
        - { name: "net.core.somaxconn", value: "65535" }
        - { name: "net.ipv4.ip_local_port_range", value: "10000 65000" }
        - { name: "net.ipv4.tcp_no_metrics_save", value: "1" }
        - { name: "net.nf_conntrack_max", value: "655360" }
        - { name: "net.netfilter.nf_conntrack_max", value: "655360" }
        - { name: "vm.swappiness", value: "1" }
  when: package_check is failed
# ставим immutable атрибут
- name: "add immutable /etc/sysctl.conf"
  file:
    path: /etc/sysctl.conf
    attr: +i
  when: package_check is failed

- name: "add immutable /etc/sysctl.d"
  file:
    path: /etc/sysctl.d
    attr: +i
  when: package_check is failed

- name: copy haproxy rpm
  copy:
    src: "{{ item }}"
    dest: /tmp
  with_fileglob:
    - files/*.rpm
  when: package_check is failed

- name: Install haproxy-2.2.3-2 from RPM
  yum:
    name: /tmp/haproxy-2.2.3-2.el8.x86_64.rpm
    state: present
    disable_gpg_check: yes
  when: package_check is failed

- name: Remove file haproxy rpm
  file:
    path: /tmp/haproxy-2.2.3-2.el8.x86_64.rpm
    state: absent
  when: package_check is failed

- name: rsyslog enable module load imudp
  lineinfile:
    dest: /etc/rsyslog.conf
    state: present
    regexp: '^#module(load="imudp")'
    line: 'module(load="imudp")'
  notify:
    - Do restart rsyslog

- name: rsyslog cfg module imudp
  lineinfile:
    dest: /etc/rsyslog.conf
    state: present
    regexp: '^#input(type="imudp" port="514")'
    line: 'input(type="imudp" port="514")'
  notify:
    - Do restart rsyslog

- name: rsyslog cfg disable haproxy log to /var/log/messages
  lineinfile:
    dest: /etc/rsyslog.conf
    state: present
    regexp: '^\*.info;mail.none;authpriv.none;cron.none'
    line: '*.info;mail.none;authpriv.none;cron.none;local2.none;local3.none /var/log/messages'
  notify:
    - Do restart rsyslog

- name: Create directory /var/log/haproxy
  file:
    path: /var/log/haproxy
    state: directory
    mode: '0755'
  when: package_check is failed

- name: Create file haproxy.conf /etc/rsyslog.d/haproxy.conf
  copy:
    content: ""
    dest: /etc/rsyslog.d/haproxy.conf
    force: yes
  when: package_check is failed

- name: Configure haproxy.conf /etc/rsyslog.d/haproxy.conf
  blockinfile:
    path: /etc/rsyslog.d/haproxy.conf
    marker: "### {mark} Managed by Ansible ###"
    block: |
      local2.* /var/log/haproxy/haproxy-api.log
      local3.* /var/log/haproxy/haproxy-ingress.log
  notify:
    - Do restart rsyslog
  when: package_check is failed

- name: copy haproxy.cfg
  copy:
    src: files/{{inventory_hostname}}
    dest: /etc/haproxy/haproxy.cfg
  notify:
    - haproxy enabled

- name: copy logrotate files haproxy-api
  copy:
    src: "files/{{ item.name }}"
    dest: /etc/logrotate.d/
  with_items:
    - { name: "haproxy-api"}
    - { name: "haproxy-ingress"}

- name: Testing HAProxy configuration
  shell: haproxy -c -V -f /etc/haproxy/haproxy.cfg
  register: HAProxystatus
  failed_when: "'ALERT' in HAProxystatus.stderr"

- name: Start service haproxy, if not started
  ansible.builtin.service:
    name: haproxy
    state: restarted
  when: package_check is failed

- name: Reload HAProxy config, if installed
  ansible.builtin.shell: haproxy -f /etc/haproxy/haproxy.cfg -p /var/run/haproxy.pid -sf $(cat /var/run/haproxy.pid)
  when: package_check is not failed